//PSF TODO create beach glass item
//make sure beach glass has no monetary value
//PSF TODO write script to generate 10 new hidden tiles where beach glass can be found if quest_gemartist is not inactive
//activate on entering the beach
//check how much beach glass is left, if not 10, run this script
//check if quest is not inactive
//pick 10 beach tiles on the route
//drop a hidden item there
//check bag, if 10 AND gem_artist is active, move to reward
//PSF TODO run a function every frame, if bag doesn't have 10 Beach Glass _and_ quest is Reward, move back to Active
//PSF TODO run a function every frame, if bag doesn't have 10 Beach Glass _and_ quest is Reward, move back to Active
//https://discord.com/channels/442462691542695948/442465020291317760/1117235992382939237

//gText_Gemartist
//Quest_Gemartist

const ARTIST = 1

script Quest_Gemartist_Active_Dialogue{
    msgbox(gText_Gemartist_AhYouSaw,MSGBOX_NPC)    
    goto(Quest_Gemartist_CheckBagAndCraftGem_Script)
}

script Quest_Gemartist_Complete_Dialogue{
    msgbox(gText_Gemartist_YoureBack,MSGBOX_NPC)
    goto(Quest_Gemartist_CheckBagAndCraftGem_Script)
}

script Quest_Gemartist_NotEnoughGlass_Dialogue{
    msgbox(gText_Gemartist_OhYouDont,MSGBOX_NPC)
    end
}

script Quest_Gemartist_CheckBagAndCraftGem_Script{
    checkitem(ITEM_RARE_CANDY,10)

        if (var(VAR_RESULT)){
            goto_if_quest_not_complete(QUEST_GEMARTIST,Quest_Gemartist_CraftFirstGem_Script)
            goto_if_quest_complete(QUEST_GEMARTIST,Quest_Gemartist_CraftNextGem_Script)
        }else{
            goto(Quest_Gemartist_NotEnoughGlass_Dialogue)
        }
}

script Quest_Gemartist_CraftGem_Script{
    special(Quest_Gemartist_SetGemFlag) 
    switch (var(VAR_RESULT)){
        case TYPE_NORMAL: giveitem(ITEM_NORMAL_GEM,1)
        case TYPE_FIGHTING: giveitem(ITEM_FIGHTING_GEM,1)
        case TYPE_FLYING: giveitem(ITEM_FLYING_GEM,1)
        case TYPE_POISON: giveitem(ITEM_POISON_GEM,1)
        case TYPE_GROUND: giveitem(ITEM_GROUND_GEM,1)
        case TYPE_ROCK: giveitem(ITEM_ROCK_GEM,1)
        case TYPE_BUG: giveitem(ITEM_BUG_GEM,1)
        case TYPE_GHOST: giveitem(ITEM_GHOST_GEM,1)
        case TYPE_STEEL: giveitem(ITEM_STEEL_GEM,1)
        case TYPE_FIRE: giveitem(ITEM_FIRE_GEM,1)
        case TYPE_WATER: giveitem(ITEM_WATER_GEM,1)
        case TYPE_GRASS: giveitem(ITEM_GRASS_GEM,1)
        case TYPE_ELECTRIC: giveitem(ITEM_ELECTRIC_GEM,1)
        case TYPE_PSYCHIC: giveitem(ITEM_PSYCHIC_GEM,1)
        case TYPE_ICE: giveitem(ITEM_ICE_GEM,1)
        case TYPE_DRAGON: giveitem(ITEM_DRAGON_GEM,1)
        case TYPE_DARK: giveitem(ITEM_DARK_GEM,1)
        case TYPE_FAIRY: giveitem(ITEM_FAIRY_GEM,1)
    }
        removeitem(ITEM_RARE_CANDY,10)
        return
}

script Quest_Gemartist_PickRandomType_Script{
    do {
        random(19)
    } while (var(VAR_RESULT) == TYPE_MYSTERY)
    return
}

script Quest_Gemartist_CraftFirstGem_Script{
    call(Quest_Gemartist_PickRandomType_Script)
    call(Quest_Gemartist_CreateGem_Cutscene)
    msgbox(gText_Gemartist_JustLikeTheAd, MSGBOX_NPC)
    completequest(QUEST_GEMARTIST)
    call_if_quest_not_active(QUEST_BREAKTHEINTERNET,Quest_Breaktheinternet_CountQuestsAndProgress_Script)
    end
}

script Quest_Gemartist_BufferNames_Script{
    bufferspeciesname(STR_VAR_1,VAR_0x8000)
    buffermovename(STR_VAR_2,VAR_0x8001)
    bufferitemname(STR_VAR_3,VAR_0x8003)
    return
}

script Quest_Gemartist_CraftNextGem_Script{
    msgbox(gText_Gemartist_INeedTheFirst)
    special(ChoosePartyMon)
    waitstate

    if (var(VAR_0x8004) == PARTY_NOTHING_CHOSEN){
        goto(Quest_Gemartist_CancelGem_Dialogue)
    }

    specialvar(VAR_RESULT,ScriptGetPartyMonSpecies)
    if (var(VAR_RESULT) == SPECIES_EGG){
        goto(Quest_Gemartist_CraftNextGem_Script)
    }

    special(Quest_Gemartist_BufferFirstMoveName)
    call(Quest_Gemartist_BufferNames_Script)

    msgbox(gText_Gemartist_IllUseYour,MSGBOX_YESNO)

    if (var(VAR_RESULT) == NO){  
        goto(Quest_Gemartist_CancelGem_Dialogue)
    }

    specialvar(VAR_RESULT,Quest_Gemartist_GetMonFirstMoveType)

    call(Quest_Gemartist_CreateGem_Cutscene)
    msgbox(gText_Gemartist_ThereYouGo, MSGBOX_NPC)

    specialvar(VAR_RESULT,Quest_Gemartist_CountRemainingUniqueGems)
    if (var(VAR_RESULT) == 0 && (!flag(FLAG_RECIEVED_GEMARTIST_MEGASTONE))){
        call(Quest_Gemartist_GiveMegaStone_Dialogue)
    }
    end
}

script Quest_Gemartist_GiveMegaStone_Dialogue{
    setflag(FLAG_RECIEVED_GEMARTIST_MEGASTONE)
    msgbox(gText_Gemartist_YouSeem)
    giveitem(ITEM_DIANCITE,1)
    release
    end
}

script Quest_Gemartist_CreateGem_Cutscene{
    applymovement(ARTIST,Common_Movement_FaceRight)
    waitmovement(ARTIST)
    msgbox(gText_Gemartist_NowJustToDoThis)
    closemessage
    delay(30)
    faceplayer
    call(Quest_Gemartist_CraftGem_Script)
    return
}


script Quest_Gemartist_CancelGem_Dialogue{
    msgbox(gText_Gemartist_ChangedYourMind,MSGBOX_NPC)
    end
}

text gText_Gemartist_AhYouSaw{
    format("Ah, you saw my ad on Twitter! Well, do you have 10 Beach Glass?")
}
text gText_Gemartist_YoureBack{
    format("You're back! Did you bring 10 more Beach Glass?")
}
text gText_Gemartist_OhYouDont{
    format("Oh, you don't have enough Beach Glass. Go get some and come back!")
}
text gText_Gemartist_JustLikeTheAd{
    format("Just like the ad said, here's your beautiful Unovaian Gem. Enjoy!")
}
text gText_Gemartist_ThereYouGo{
    format("There you go!")
}
text gText_Gemartist_NowJustToDoThis{
    format("Okay, now just melt these down...")
}
text gText_Gemartist_ChangedYourMind{
    format("Changed your mind?")
}

text gText_Gemartist_INeedTheFirst{
    format("I need the power from the first move of one of your Pok√©mon.")
}

text gText_Gemartist_IllUseYour{
    format("I'll use your {STR_VAR_1}'s {STR_VAR_2} to make a {STR_VAR_3}, okay?")
}

text gText_Gemartist_YouSeem{
    format("You seem like a real serious Trainer! I found this a while ago, but I don't have any use for it. Maybe you will?")
}
