//gText_Bodegaburnout_
//Quest_Bodegaburnout_

const DELIVER = 0
const RESCUE = 1
const CATCH =2
const CATCH_STRONG = 3
const CATCH_COLD  = 4
const CATCH_SMART = 5
const CATCH_FAIRY = 6

script Quest_Bodegaburnout_Clerk_Discussion_Script{
    msgbox(gText_Bodegaburnout_OhIHeard)
    call(Quest_Bodegaburnout_LoadRequest_Script)
    release
    end
}

script Quest_Bodegaburnout_CheckSubquestState_Script{
    specialvar(VAR_0x8008,Quest_Bodegaburnout_IsSubquestComplete)
    returnqueststate(QUEST_BODEGABURNOUT)

    if ((var(VAR_RESULT) > QUEST_MENU_UNLOCK_QUEST) && (!var(VAR_0x8008))) {
        goto(Quest_Bodegaburnout_Clerk_Discussion_Script)
    }
}

script Quest_Bodegaburnout_LoadRequest_Script{
    special(Quest_Bodegaburnout_LoadRequestText)
    specialvar(VAR_RESULT,Quest_Bodegaburnout_GetQuestType)

        switch(var(VAR_RESULT)){
            case DELIVER:
                goto(Quest_Bodegaburnout_Deliver_Dialogue)
            case RESCUE:
                goto(Quest_Bodegaburnout_Rescue_Dialogue)
            default:
                goto(Quest_Bodegaburnout_Catch_Dialogue)
        }
}

script Quest_Bodegaburnout_Deliver_Dialogue{
   msgbox(gText_Bodegaburnout_CanYouDeliever) 

    specialvar(VAR_RESULT,Quest_Bodegaburnout_CheckLocationAndMatchItem)
    if (!var(VAR_RESULT)){
        callstd(STD_OBTAIN_ITEM)
    }
    else{
        msgbox(gText_Bodegaburnout_OhRightIGave)
    }
    closemessage
    release
    end
}

script Quest_Bodegaburnout_Rescue_Dialogue{
    msgbox(gText_Bodegaburnout_WentMissing)
    special(Quest_Bodegaburnout_ClearRescueFlag)
    closemessage
    release
    end
}

script Quest_Bodegaburnout_Catch_Dialogue{ 
    msgbox(gText_Bodegaburnout_DoYouHave,MSGBOX_YESNO)

    if (var(VAR_RESULT) == NO){
        goto(Quest_Bodegaburnout_NoRefusePokemon_Dialogue)
    }else{
        goto(Quest_Bodegaburnout_EvaluatePokemon_Script)
    }
}

script Quest_Bodegaburnout_NoRefusePokemon_Dialogue{
    msgbox(gText_Bodegaburnout_ComeBackWhen)
    release
    end
}

script Quest_Bodegaburnout_EvaluatePokemon_Script{
    special(ChoosePartyMon)
    waitstate

    if (var(VAR_0x8004) == PARTY_NOTHING_CHOSEN){
        goto(Quest_Bodegaburnout_NoRefusePokemon_Dialogue)
    }

    specialvar(VAR_RESULT,Quest_Bodegaburnout_CheckRequiredPokemon)
    if (!var(VAR_RESULT)){
        goto(Quest_Bodegaburnout_WrongPokemon_Dialogue)
    }

    msgbox(gText_Bodegaburnout_AskForMon,MSGBOX_YESNO)
    if (var(VAR_RESULT) == NO){
        goto(Quest_Bodegaburnout_NoRefusePokemon_Dialogue)
    }

    special(HasEnoughMonsForDoubleBattle)
    if (var(VAR_RESULT) != PLAYER_HAS_TWO_USABLE_MONS){
        goto(Quest_Bodegaburnout_NotEnough_Dialogue)
    }

    goto(Quest_Bodegaburnout_TakeMonMarkSubquest_Script)
}

script Quest_Bodegaburnout_WrongPokemon_Dialogue{
    msgbox(gText_Bodegaburnout_YouKnowIDont)
    closemessage
    release
    end
}

script Quest_Bodegaburnout_NotEnough_Dialogue{
    msgbox(gText_Bodegaburnout_ThatsYourLast)
    closemessage
    release
    end
}

script Quest_Bodegaburnout_TakeMonMarkSubquest_Script{
    special(DeleteChosenPartyMon)
    special(Quest_Bodegaburnout_Catch_MarkSubquestComplete)
    call(Quest_Bodegaburnout_CheckReward_Script)
    closemessage
    release
    end
}

script Quest_Bodegaburnout_CheckNextStage_Script{
    specialvar(VAR_RESULT,Quest_Bodegaburnout_CheckReadyForNext)
    if (var(VAR_RESULT)){
        returnqueststate(QUEST_WAREHOUSEWARFARE)
        if (var(VAR_RESULT) < QUEST_MENU_SET_ACTIVE){
            goto(Quest_Warehousewarfare_CallPlayer_Dialogue)
        }
    }
    return
}

script Quest_Bodegaburnout_CheckReward_Script{
    specialvar(VAR_RESULT,Quest_Bodegaburnout_CountRemainingSubquests)

    if (var(VAR_RESULT) == 0){
        questmenu(QUEST_MENU_SET_REWARD,QUEST_BODEGABURNOUT)
    }
    return
}

script Quest_Bodegaburnout_Reward_Dialogue{
    msgbox(gText_Bodegaburnout_HeyWeAllNoticed)
    closemessage
    giveitem(ITEM_OVAL_CHARM,1)
    msgbox(gText_Bodegaburnout_YoureARealOne)
    completequest(QUEST_BODEGABURNOUT)
    return
}

script Quest_Bodegaburnout_Warehousewarfare_Dialogue{
    msgbox(gText_Bodegaburnout_WordHasBeenGetting)
    return
}

text gText_Bodegaburnout_OhIHeard{
    format("Oh, I heard you'd be coming. You're {PLAYER}, right?")
}
text gText_Bodegaburnout_DoYouHave{
    format("We need a {STR_VAR_1} to help us {STR_VAR_2}. Do you have one?")
}
text gText_Bodegaburnout_ComeBackWhen{
    format("Come back when you do! Or when you need anything, of course.")
}
text gText_Bodegaburnout_AskForMon{
    format("Are you sure you're okay giving us this mon?")
}
text gText_Bodegaburnout_WordHasBeenGetting{
    format("Word has getting around about you helping out. Thanks so much! You should meet with the leader of the union in Pacifica.")
}
text gText_Bodegaburnout_YouKnowIDont{
    format("You know, I don't think that mon will work.")
}
text gText_Bodegaburnout_ThatsYourLast{
    format("I can't take that! Its your last Mon!")
}
text gText_Bodegaburnout_HeyWeAllNoticed{
    format("Hey, we all noticed you helping out, so we got you this.")
}
text gText_Bodegaburnout_YoureARealOne{
    format("You're a real one!")
}
text gText_Bodegaburnout_CanYouDeliever{
    format("Can you deliever this to {STR_VAR_1}? They're on {STR_VAR_2}.")
}
text gText_Bodegaburnout_WentMissing{
    format("Can you help us find our {STR_VAR_1}? We sent them over to {STR_VAR_2} but they haven't returned...")
}

text gText_Bodegaburnout_OhRightIGave{
    format("Huh? Oh right, I gave you the package already!")
}

// ***********************************************************************
// Related NPCs
// ***********************************************************************

script Quest_Bodegaburnout_DeliveryA_Dialogue{
    subquestmenu(QUEST_MENU_CHECK_COMPLETE,QUEST_BODEGABURNOUT,SUB_QUEST_1)
    if (var(VAR_RESULT)){
        msgbox(gText_ExpandedPlaceholder_Empty,MSGBOX_AUTOCLOSE)
    }else{
        msgbox(gText_ExpandedPlaceholder_Empty,MSGBOX_AUTOCLOSE)
        special(Quest_Bodegaburnout_DeliveryRescue_MarkSubquestCompleteAndRemoveItem)
        call(Quest_Bodegaburnout_CheckReward_Script)
    }
    end
}

script Quest_Bodegaburnout_DeliveryB_Dialogue{
    subquestmenu(QUEST_MENU_CHECK_COMPLETE,QUEST_BODEGABURNOUT,SUB_QUEST_2)
    if (var(VAR_RESULT)){
        msgbox(gText_ExpandedPlaceholder_Empty,MSGBOX_AUTOCLOSE)
    }else{
        msgbox(gText_ExpandedPlaceholder_Empty,MSGBOX_AUTOCLOSE)
        special(Quest_Bodegaburnout_DeliveryRescue_MarkSubquestCompleteAndRemoveItem)
        call(Quest_Bodegaburnout_CheckReward_Script)
    }
    end
}

script Quest_Bodegaburnout_DeliveryC_Dialogue{
    subquestmenu(QUEST_MENU_CHECK_COMPLETE,QUEST_BODEGABURNOUT,SUB_QUEST_3)
    if (var(VAR_RESULT)){
        msgbox(gText_ExpandedPlaceholder_Empty,MSGBOX_AUTOCLOSE)
    }else{
        msgbox(gText_ExpandedPlaceholder_Empty,MSGBOX_AUTOCLOSE)
        special(Quest_Bodegaburnout_DeliveryRescue_MarkSubquestCompleteAndRemoveItem)
        call(Quest_Bodegaburnout_CheckReward_Script)
    }
    end
}

script Quest_Bodegaburnout_DeliveryD_Dialogue{
    subquestmenu(QUEST_MENU_CHECK_COMPLETE,QUEST_BODEGABURNOUT,SUB_QUEST_4)
    if (var(VAR_RESULT)){
        msgbox(gText_ExpandedPlaceholder_Empty,MSGBOX_AUTOCLOSE)
    }else{
        msgbox(gText_ExpandedPlaceholder_Empty,MSGBOX_AUTOCLOSE)
        special(Quest_Bodegaburnout_DeliveryRescue_MarkSubquestCompleteAndRemoveItem)
        call(Quest_Bodegaburnout_CheckReward_Script)
    }
    end
}

script Quest_Bodegaburnout_DeliveryE_Dialogue{
    subquestmenu(QUEST_MENU_CHECK_COMPLETE,QUEST_BODEGABURNOUT,SUB_QUEST_5)
    if (var(VAR_RESULT)){
        msgbox(gText_ExpandedPlaceholder_Empty,MSGBOX_AUTOCLOSE)
    }else{
        msgbox(gText_ExpandedPlaceholder_Empty,MSGBOX_AUTOCLOSE)
        special(Quest_Bodegaburnout_DeliveryRescue_MarkSubquestCompleteAndRemoveItem)
        call(Quest_Bodegaburnout_CheckReward_Script)
    }
    end
}

script Quest_Bodegaburnout_DeliveryF_Dialogue{
    subquestmenu(QUEST_MENU_CHECK_COMPLETE,QUEST_BODEGABURNOUT,SUB_QUEST_6)
    if (var(VAR_RESULT)){
        msgbox(gText_ExpandedPlaceholder_Empty,MSGBOX_AUTOCLOSE)
    }else{
        msgbox(gText_ExpandedPlaceholder_Empty,MSGBOX_AUTOCLOSE)
        special(Quest_Bodegaburnout_DeliveryRescue_MarkSubquestCompleteAndRemoveItem)
        call(Quest_Bodegaburnout_CheckReward_Script)
    }
    end
}

script Quest_Bodegaburnout_RescueNPCAndCompleteSubquest_Script{
    fadescreen(FADE_TO_BLACK)
    removeobject(VAR_LAST_TALKED)
    fadescreen(FADE_FROM_BLACK)
    special(Quest_Bodegaburnout_DeliveryRescue_MarkSubquestCompleteAndRemoveItem)
    call(Quest_Bodegaburnout_CheckReward_Script)
    return
}

script Quest_Bodegaburnout_RescueA_Dialogue{
    msgbox(gText_ExpandedPlaceholder_Empty,MSGBOX_AUTOCLOSE)
    call(Quest_Bodegaburnout_RescueNPCAndCompleteSubquest_Script)
    release
    end
}
script Quest_Bodegaburnout_RescueB_Dialogue{
    msgbox(gText_ExpandedPlaceholder_Empty,MSGBOX_AUTOCLOSE)
    call(Quest_Bodegaburnout_RescueNPCAndCompleteSubquest_Script)
    release
    end
}
script Quest_Bodegaburnout_RescueC_Dialogue{
    msgbox(gText_ExpandedPlaceholder_Empty,MSGBOX_AUTOCLOSE)
    call(Quest_Bodegaburnout_RescueNPCAndCompleteSubquest_Script)
    release
    end
}
script Quest_Bodegaburnout_RescueD_Dialogue{
    msgbox(gText_ExpandedPlaceholder_Empty,MSGBOX_AUTOCLOSE)
    call(Quest_Bodegaburnout_RescueNPCAndCompleteSubquest_Script)
    release
    end
}
script Quest_Bodegaburnout_RescueE_Dialogue{
    msgbox(gText_ExpandedPlaceholder_Empty,MSGBOX_AUTOCLOSE)
    call(Quest_Bodegaburnout_RescueNPCAndCompleteSubquest_Script)
    release
    end
}
script Quest_Bodegaburnout_RescueF_Dialogue{
    msgbox(gText_ExpandedPlaceholder_Empty,MSGBOX_AUTOCLOSE)
    call(Quest_Bodegaburnout_RescueNPCAndCompleteSubquest_Script)
    release
    end
}
