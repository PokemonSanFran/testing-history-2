const PLAYER = OBJ_EVENT_ID_PLAYER
const MALVA = 1
const DRASNA = 2
const SIEBOLD = 3
const WIKSTROM = 4
const ARCHER = 5
const PKMNA = 6
const BIANCA = 9

const FLAG_HIDE_RAID = FLAG_TEMP_1
const FLAG_HIDE_PKMN = FLAG_TEMP_2
const FLAG_HIDE_BIANCA = FLAG_TEMP_4
const FLAG_HIDE_GUARD = FLAG_TEMP_1F

const FLAG_HIDE_SABRINA_CONFERENCE = FLAG_TEMP_1
const FLAG_HIDE_RAID_PARTY_CONFERENCE = FLAG_TEMP_9
const FLAG_HIDE_OAK_CONFERENCE = FLAG_TEMP_3
const FLAG_HIDE_BIANCA_CONFERENCE = FLAG_TEMP_8
const FLAG_HIDE_ROSE_CONFERENCE = FLAG_TEMP_5
const FLAG_HIDE_KOGA_CONFERENCE = FLAG_TEMP_4


script ImIn_HideObject_OutsideHouse_Script {

    setflag(FLAG_HIDE_PKMN)
    if (var(VAR_STORYLINE_STATE) != STORY_BEFORE_SABRINA_BREAKIN || var(VAR_TOWER_RAID_STATE) != 0){
        setflag(FLAG_HIDE_RAID)
    }
}

script ImIn_HideStairsGuard_Script {
    setflag(FLAG_HIDE_GUARD)
}

script ImIn_ShowBianca_Script {
    setflag(FLAG_HIDE_GUARD)
    clearflag(FLAG_HIDE_BIANCA)
    addobject(BIANCA)
}

script ImIn_HideBianca_Script {
    setflag(FLAG_HIDE_BIANCA)
}

script ImIn_ResumeSave_Script {
    call(ImIn_ShowBianca_Script)
    call(ImIn_MoveBianca_Script)
}

script ImIn_MoveBianca_Script {
    setobjectxy(9,12,26)
        setobjectxyperm(9,12,26)
}

script ImIn_DestroyWall_Script {
    if (var(VAR_TOWER_RAID_STATE)){
        setmetatile(15,13,0x0A7,FALSE)
            special(DrawWholeMapView)
    }
    return
}

script ImIn_CutsceneSetup_OutsideHouse_Script {
        clearflag(FLAG_HIDE_RAID)

        addobject(MALVA)
        addobject(DRASNA)
        addobject(SIEBOLD)
        addobject(WIKSTROM)
        addobject(ARCHER)
}

script ImIn_ReleaseFromBall_Script {
    playse(SE_BALL_OPEN)
        waitse
        clearflag(FLAG_HIDE_PKMN)
        addobject(PKMNA)
        playmoncry(SPECIES_MACHAMP, CRY_MODE_ENCOUNTER)
        waitmoncry
}

script ImIn_ObjectSetUp_InsideHouse_Script {
    setobjectxyperm(MALVA,15,4)
        setobjectxyperm(DRASNA,16,3)
        setobjectxyperm(SIEBOLD,17,4)
        setobjectxyperm(WIKSTROM,18,5)
        setobjectxyperm(ARCHER,19,3)
}

script ImIn_MoveObject_BeforeWarp_Script {
    addobject(MALVA)
        addobject(DRASNA)
        addobject(SIEBOLD)
        addobject(WIKSTROM)
        addobject(ARCHER)

        setobjectxy(MALVA,10,3)
        setobjectxy(SIEBOLD,10,4)
        setobjectxy(WIKSTROM,12,3)
        setobjectxy(ARCHER,12,4)
        setobjectxy(DRASNA,11,2)

        setobjectxy(PLAYER,11,4)
        TeleportCamera(11,4)

        applymovement(MALVA,Common_Movement_FaceRight)
        applymovement(SIEBOLD,Common_Movement_FaceRight)
        applymovement(WIKSTROM,Common_Movement_FaceLeft)
        applymovement(DRASNA,Common_Movement_FaceDown)
        applymovement(ARCHER,Common_Movement_FaceLeft)
        waitmovement(DRASNA)
}

const MALVA_B = 15
const DRASNA_B = 16
const SIEBOLD_B = 17
const WIKSTROM_B = 18
const ARCHER_B = 19

script ImIn_ObjectSetUp_PostWarp_Script {
        setflag(FLAG_TEMP_1)
        setflag(FLAG_TEMP_2)
        setflag(FLAG_TEMP_3)
        setflag(FLAG_TEMP_4)
        setflag(FLAG_TEMP_5)
        setflag(FLAG_TEMP_6)
        setflag(FLAG_TEMP_7)
        setflag(FLAG_TEMP_8)
        clearflag(FLAG_TEMP_9)
        call(ImIn_HideStairsGuard_Script)
}

script ImIn_CheckPlayer_Script {
    lock
      
    //If Elite Four has specifically told you to go to the house to break in, nothing happens here.
    if (var(VAR_STORYLINE_STATE) != STORY_BEFORE_SABRINA_BREAKIN){
        release
            end
    }
    goto(ImIn_StartHouseBreak_Script)
}

script ImIn_StartHouseBreak_Script {
        setvar(VAR_TOWER_RAID_STATE,BROKEN_IN_SABRINA)

        fadescreen(FADE_TO_BLACK)
        call(ImIn_CutsceneSetup_OutsideHouse_Script)
        fadescreen(FADE_FROM_BLACK)

        applymovement(PLAYER,ImIn_ApproachHouse)
        waitmovement(PLAYER)

        applymovement(SIEBOLD,Common_Movement_FaceDown)

        setvar(VAR_0x8000, MUGSHOT_MARSHAL)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_WereCertainNobody)

        setvar(VAR_0x8000, MUGSHOT_GRIMSLEY)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_HasntLeftWorkEarly)

        //PSF TODO Figure out how to show that they're talking via walkie

        setvar(VAR_0x8000, MUGSHOT_ARIANA)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_WereInPosition)
        closemessage
        callnative(ClearMugshot)

        applymovement(ARCHER,ImIn_WalkAroundHouse)
        waitmovement(ARCHER)

        applymovement(MALVA,Common_Movement_FaceRight)
        applymovement(DRASNA,Common_Movement_FaceRight)
        applymovement(SIEBOLD,Common_Movement_FaceRight)
        applymovement(WIKSTROM,Common_Movement_FaceRight)
        applymovement(PLAYER,Common_Movement_FaceRight)
        waitmovement(PLAYER)

        setvar(VAR_0x8000, MUGSHOT_HUGH)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_TheSideDoorWill)

        setvar(VAR_0x8000, MUGSHOT_SHAUNTAL)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_LetsMoveThen)
        closemessage
        callnative(ClearMugshot)

        applymovement(ARCHER,ImIn_WalkToSideDoor)
        waitmovement(ARCHER)

        call(ImIn_ReleaseFromBall_Script)

        setvar(VAR_0x8000, MUGSHOT_HUGH)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_BrickBreakSureComes)
        callnative(ClearMugshot)
        closemessage

        playse(SE_M_BRICK_BREAK)
        applymovement(PKMNA,ImIn_AttackHouse)
        waitse
        waitmovement(PKMNA)
        call(ImIn_DestroyWall_Script)

        applymovement(PKMNA,ImIn_WalkIntoHouseA)
        applymovement(MALVA,ImIn_WalkIntoHouseB)
        applymovement(DRASNA,ImIn_WalkIntoHouseC)
        applymovement(SIEBOLD,ImIn_WalkIntoHouseD)
        applymovement(WIKSTROM,ImIn_WalkIntoHouseE)
        applymovement(ARCHER,ImIn_WalkIntoHouseF)

        playse(SE_EXIT)
        playse(SE_EXIT)
        playse(SE_EXIT)
        playse(SE_EXIT)
        playse(SE_EXIT)
        playse(SE_EXIT)
        waitse
        waitmovement(MALVA)

        removeobject(PKMNA)
        removeobject(MALVA)
        removeobject(DRASNA)
        removeobject(SIEBOLD)
        removeobject(WIKSTROM)
        removeobject(ARCHER)

        release
        end
}

script ImIn_UnlockDoor_Script {
    setmetatile(11,6,0x228,FALSE)
        special(DrawWholeMapView)
}

script Imin_BeginHouseSearch_Script {
    lock
        setvar(VAR_TOWER_RAID_STATE,SEARCHING_SABRINA_HOUSE)
        setvar(VAR_0x8000, MUGSHOT_SHAUNTAL)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_OkaySpreadOut)
        closemessage
        callnative(ClearMugshot)

        applymovement(MALVA,ImIn_SpreadOutHouse)
        applymovement(DRASNA,ImIn_SpreadOutHouse)
        applymovement(SIEBOLD,ImIn_SpreadOutHouse)
        applymovement(WIKSTROM,ImIn_SpreadOutHouse)
        applymovement(ARCHER,ImIn_SpreadOutHouse)
        waitmovement(ARCHER)

        setobjectxy(MALVA,2,7)
        setobjectxy(DRASNA,18,9)
        setobjectxy(SIEBOLD,10,11)
        setobjectxy(WIKSTROM,15,17)
        setobjectxy(ARCHER,3,13)

        setobjectxyperm(MALVA,2,7)
        setobjectxyperm(DRASNA,18,9)
        setobjectxyperm(SIEBOLD,10,11)
        setobjectxyperm(WIKSTROM,15,17)
        setobjectxyperm(ARCHER,3,13)

        release
        end
}

script ImIn_FindLockedDoor_Script {
    lock

        setvar(VAR_TOWER_RAID_STATE,FOUND_SABRINA_WARP_DOOR)

        setvar(VAR_0x8000, MUGSHOT_HILDA)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_IFoundADoor)

        setvar(VAR_0x8000, MUGSHOT_HUGH)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_GuessWereAllLooking)
        callnative(ClearMugshot)
        closemessage

        release
        end
}

script ImIn_InteractDoor_Script {
    checkitem(ITEM_MAGMA_EMBLEM) 

        if (var(VAR_RESULT)){
            goto(ImIn_EnterCorrectCode_Script)
        }

    msgbox(format("Find the thing to unlock this door!"),MSGBOX_AUTOCLOSE)
}

script ImIn_EnterCorrectCode_Script {
    lock
        addvar(VAR_TOWER_RAID_STATE,SABRINA_WARP_DOOR_UNLOCKED)

        playse(SE_DING_DONG)
        waitse
        playse(SE_SLIDING_DOOR)
        call(ImIn_UnlockDoor_Script)
        delay(16)

        fadescreen(FADE_TO_BLACK)
        call(ImIn_MoveObject_BeforeWarp_Script)
        fadescreen(FADE_FROM_BLACK)

        setvar(VAR_0x8000, MUGSHOT_MARSHAL)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_WereIn)

        setvar(VAR_0x8000, MUGSHOT_ARIANA)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_OnceYoureAllThrough)

        setvar(VAR_0x8000, MUGSHOT_GRIMSLEY)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_ImTooOldFor)

        setvar(VAR_0x8000, MUGSHOT_CAITLIN)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_ThesePeopleAreFighting)
        callnative(ClearMugshot)
        closemessage

        applymovement(MALVA,Common_Movement_WalkRight)
        waitmovement(MALVA)
        removeobject(MALVA)
        playse(SE_WARP_OUT)
        applymovement(SIEBOLD,ImIn_WalkToWarpFromLeft)
        waitmovement(SIEBOLD)
        removeobject(SIEBOLD)
        playse(SE_WARP_OUT)
        applymovement(WIKSTROM,Common_Movement_WalkLeft)
        waitmovement(WIKSTROM)
        removeobject(WIKSTROM)
        playse(SE_WARP_OUT)
        applymovement(DRASNA,Common_Movement_WalkDown)
        waitmovement(DRASNA)
        removeobject(DRASNA)
        playse(SE_WARP_OUT)
        applymovement(ARCHER,ImIn_WalkToWarpFromRight)
        waitmovement(ARCHER)
        removeobject(ARCHER)
        playse(SE_WARP_OUT)

        setvar(VAR_STORYLINE_STATE,STORY_WARP_TILE_ACCESSIBLE)

        release
        end
}

script ImIn_PostWarpSplit_Dialogue {
    lock

        setvar(VAR_TOWER_RAID_STATE,TEAM_ENTERED_SALESFORCETOWER)

        setvar(VAR_0x8000, MUGSHOT_MARSHAL)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_WereAllIn)

        setvar(VAR_0x8000, MUGSHOT_ARIANA)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_LetTheMarch)

        setvar(VAR_0x8000, MUGSHOT_MARSHAL)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_LetsGoSecure)
        closemessage
        callnative(ClearMugshot)

        applymovement(SIEBOLD_B,ImIn_WalkAwayFromWarpB)
        applymovement(DRASNA_B,ImIn_WalkAwayFromWarpA)
        waitmovement(DRASNA_B)

        setvar(VAR_0x8000, MUGSHOT_CAITLIN)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_ThisPlaceIsProbably)

        setvar(VAR_0x8000, MUGSHOT_HILDA)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_HasAnOfficeOn)

        setvar(VAR_0x8000, MUGSHOT_SHAUNTAL)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_FloorThenLets)
        closemessage
        callnative(ClearMugshot)

        applymovement(MALVA_B,ImIn_WalkAwayFromWarpC)
        applymovement(WIKSTROM_B,ImIn_WalkAwayFromWarpD)
        applymovement(ARCHER_B,ImIn_WalkAwayFromWarpE)

        waitmovement(WIKSTROM_B)

        removeobject(MALVA_B)
        removeobject(DRASNA_B)
        removeobject(SIEBOLD_B)
        removeobject(WIKSTROM_B)
        removeobject(ARCHER_B)

        release
        end
}

script ImIn_PreventPlayerProgress_Script {
    if (var(VAR_TOWER_RAID_STATE) > SAVE_BIANCA_SALESFORCETOWER){
        release
            end
    }
    lock

        applymovement(PLAYER,Common_Movement_FaceUp)
        waitmovement(PLAYER)

        setvar(VAR_0x8000, MUGSHOT_HILDA)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_OfficeIsOn)
        callnative(ClearMugshot)
        closemessage

        applymovement(PLAYER,ImIn_WalkAwayStairs)
        waitmovement(PLAYER)
        release
        end
}

script ImIn_OfficeReveal_Dialogue {
    lock
        setvar(VAR_TOWER_RAID_STATE,SAVE_BIANCA_SALESFORCETOWER)
        playbgm(MUS_ENCOUNTER_MAY,TRUE)

        setvar(VAR_0x8000, MUGSHOT_BIANCA)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_DoYouLikeMy)
        closemessage
        callnative(ClearMugshot)

        applymovement(PLAYER,ImIn_ApproachDesk)
        waitmovement(PLAYER)

        setvar(VAR_0x8000, MUGSHOT_HILDA)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_WhatAreYouDoing)

        setvar(VAR_0x8000, MUGSHOT_BIANCA)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_IDidntChooseToAlign)

        setvar(VAR_0x8000, MUGSHOT_HILDA)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_WaitTrash)

        setvar(VAR_0x8000, MUGSHOT_BIANCA)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_WasDestryogingThisRegion)

        setvar(VAR_0x8000, MUGSHOT_HILDA)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_SoYouJustDontCare)

        setvar(VAR_0x8000, MUGSHOT_BIANCA)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_LookAllThisHelping)

        setvar(VAR_0x8000, MUGSHOT_HILDA)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_DaddyWontBeAble)
        closemessage
        callnative(ClearMugshot)

        applymovement(9,ImIn_WalkFromDesk)
        waitmovement(9)

        call(Common_EventScript_SaveGame)
        closemessage
        goto(ImIn_StartBiancaBattle_Script)
}

script ImIn_StartBiancaBattle_Script {

    lock
        setvar(VAR_0x8000, MUGSHOT_BIANCA)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_AreDeadDoYou)
        closemessage
        callnative(ClearMugshot)

        trainerbattle_no_intro(TRAINER_MAY_LILYCOVE_MUDKIP,gText_ImIn_HowDoesThisKeep)
        goto(ImIn_BiancaDefeated_Dialogue)
}

script ImIn_InteractBiancaBattle_Script {
    playbgm(MUS_ENCOUNTER_MAY,TRUE)
    goto(ImIn_StartBiancaBattle_Script)
}

script ImIn_BiancaDefeated_Dialogue {
    lock
        setvar(VAR_TOWER_RAID_STATE,DEFEATED_BIANCA_SALESFORCETOWER)
        call(ImIn_MoveBianca_Script)

        setvar(VAR_0x8000, MUGSHOT_HILDA)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_Wheres)

        setvar(VAR_0x8000, MUGSHOT_BIANCA)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_WhatsTheSecret)

        setvar(VAR_0x8000, MUGSHOT_HILDA)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_EverythingAboutIsBullshit)

        setvar(VAR_0x8000, MUGSHOT_BIANCA)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_Floor)
        callnative(ClearMugshot)
        closemessage
        release
        end
}

script ImIn_PostBiancaBattle_Interact_Dialogue {
    setvar(VAR_0x8000, MUGSHOT_BIANCA)
        callnative(DrawMugshot)
        msgbox(gText_ImIn_AllThatTraining,MSGBOX_NPC)
        callnative(ClearMugshot)
}

script ImIn_InteractBianca_Event_Script {
    lock

        switch(var(VAR_TOWER_RAID_STATE)){
            case SAVE_BIANCA_SALESFORCETOWER: call(ImIn_InteractBiancaBattle_Script)
            default: call(ImIn_PostBiancaBattle_Interact_Dialogue)
        }

    closemessage
        release
        end
}

text gText_ImIn_WereCertainNobody {
    format("We're certain nobody is home?")
}

text gText_ImIn_HasntLeftWorkEarly {
    format("Sabrina hasn't left work early a day in their life. Ycombinator is led by monsters, but at least they're hard-working monsters.")
}

text gText_ImIn_WereInPosition {
    format("We're in position at Tenderloin. Ready to mobilize this diversion when you are.")
}

text gText_ImIn_TheSideDoorWill {
    format("The side door will definitely work, didn't see an alarm either.")
}

text gText_ImIn_LetsMoveThen {
    format("Let's move then!")
}

text gText_ImIn_BrickBreakSureComes {
    format("Brick Break sure comes in handy when most houses are made of the stuff.")
}

text gText_ImIn_OkaySpreadOut {
    format("Okay, spread out. We're looking for the warp panel. Use the walkies if you see anything.")
}

text gText_ImIn_IFoundADoor {
    format("I found a door with an electronic lock! It takes six digits.")
}

text gText_ImIn_GuessWereAllLooking {
    format("Guess we're all looking for any numbers that seem important. No way it's just their birthday, right?")
}

text gText_ImIn_WereIn {
    format("Ariana, we're in. Everybody remember the plan?")
}

text gText_ImIn_OnceYoureAllThrough {
    format("Once you're all through the panel, I'll lead the diversion protest at the front doors of the tower. Security will be focused on us, letting you to the executive levels and hopefully find Rose.")
}

text gText_ImIn_ImTooOldFor {
    format("I'm too old for scaling mountains. Siebold and I can get into the production studio and get ready to broadcast that confession.")
}

text gText_ImIn_ThesePeopleAreFighting {
    format("These people are fighting to kill. Stay safe.")
}

text gText_ImIn_WereAllIn {
    format("We're all in.")
}

text gText_ImIn_LetTheMarch {
    format("Let the march begin… good luck!")
}

text gText_ImIn_LetsGoSecure {
    format("Drasna, let's go secure the studio.")
}

text gText_ImIn_ThisPlaceIsProbably {
    format("This place is probably crawling with Trainers. Let's spread out.")
}

text gText_ImIn_HasAnOfficeOn {
    format("Rose has an office on the 10th floor, I've been there myself.")
}

text gText_ImIn_FloorThenLets {
    format("10th floor then, let's move!")
}

text gText_ImIn_OfficeIsOn {
    format("Rose's office is on Floor 10.")
}

text gText_ImIn_DoYouLikeMy {
    format("Do you like my new office?")
}

text gText_ImIn_WhatAreYouDoing {
    format("Bianca, what are you doing here?")
}

text gText_ImIn_IDidntChooseToAlign {
    format("I didn't choose to align myself with the ghetto trash. Turns out, if you stick with the good guys, you get a sick job and a corner office.")
}

text gText_ImIn_WaitTrash {
    format("Wait, trash? Did you hear what these people did to Alameda?")
}

text gText_ImIn_WasDestryogingThisRegion {
    format("TeamRocket was destroying this region with their idiocy. We wiped ‘em out. And you decided to help them? After everything Ycombinator did for you?")
}

text gText_ImIn_SoYouJustDontCare {
    format("So you just don't care that you work for murderers?")
}

text gText_ImIn_LookAllThisHelping {
    format("Look, all this helping people shit is cool, but I came here to be the best. I'm done losing to scrubs and I'm done pretending to care.")
}

text gText_ImIn_DaddyWontBeAble {
    format("Daddy won't be able to buy your way out of this one.")
}

text gText_ImIn_AreDeadDoYou {
    format("If you and Archer are dead, do you think I get to be Champion instead?")
}

text gText_ImIn_HowDoesThisKeep {
    format("How does this keep happening?!?!?")
}

text gText_ImIn_Wheres {
    format("Where's Rose?!")
}

text gText_ImIn_WhatsTheSecret {
    format("What's the secret? What am I missing? Why do I keep LOSING?")
}

text gText_ImIn_EverythingAboutIsBullshit {
    format("Everything about Ycombinator is bullshit. You're not any stronger. The region isn't any better. But as long as they have stans like you, they're going to continue to get richer and more toxic. Tell me where Rose is.")
}

text gText_ImIn_Floor {
    format("Floor 11.")
}

text gText_ImIn_AllThatTraining {
    format("…all that training…")
}

movement ImIn_ApproachHouse {
    walk_up
        step_end
}

movement ImIn_WalkAroundHouse {
    walk_right
        walk_down * 5
        step_end
}

movement ImIn_WalkToSideDoor {
    walk_up * 4
        face_down
        step_end
}

movement ImIn_AttackHouse {
    lock_facing_direction
        walk_left
        walk_right
        step_end
}

movement ImIn_WalkIntoHouseA {
    walk_left
        step_end
}

movement ImIn_WalkIntoHouseB {
    walk_right * 5
        walk_up * 4
        walk_left
        step_end
}

movement ImIn_WalkIntoHouseC {
    walk_right
        walk_up * 4
        walk_left
        step_end
}

movement ImIn_WalkIntoHouseD {
    walk_right * 4
        walk_up * 3
        walk_left
        step_end
}

movement ImIn_WalkIntoHouseE {
    walk_up * 4
        walk_left
        step_end
}

movement ImIn_WalkIntoHouseF {
    walk_down
        walk_left
        step_end
}

movement ImIn_SpreadOutHouse {
    walk_down * 6
        step_end
}

movement ImIn_WalkToWarpFromLeft {
    walk_up
        walk_right
        step_end
}

movement ImIn_WalkToWarpFromRight {
    walk_up
        walk_left
        step_end
}

movement ImIn_WalkAwayFromWarpA {
    walk_right * 2
        walk_down * 3
        walk_left * 4
        walk_down * 4
        step_end
}

movement ImIn_WalkAwayFromWarpB {
    walk_down * 4
        step_end
}

movement ImIn_WalkAwayFromWarpC {
    walk_left
        walk_down * 4
        step_end
}

movement ImIn_WalkAwayFromWarpD {
    walk_down * 3
        walk_left * 3
        walk_down * 3
        step_end
}

movement ImIn_WalkAwayFromWarpE {
    walk_left * 2
        walk_down * 4
        step_end
}

movement ImIn_WalkAwayStairs {
    lock_facing_direction
        walk_down
        unlock_facing_direction
        step_end
}

movement ImIn_ApproachDesk {
    walk_right * 3
        step_end
}

movement ImIn_WalkFromDesk {
    walk_down
        walk_left * 2
        step_end
}
